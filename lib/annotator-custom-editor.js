// Generated by CoffeeScript 1.9.1
(function() {
  var CustomEditor,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  Annotator.Plugin.CustomEditor = CustomEditor = (function(superClass) {
    extend(CustomEditor, superClass);

    function CustomEditor() {
      return CustomEditor.__super__.constructor.apply(this, arguments);
    }

    CustomEditor.prototype.pluginInit = function() {
      return this.annotator.subscribe('beforeAnnotationCreated', (function(_this) {
        return function(annotation) {
          return _this.customSetup(annotation);
        };
      })(this)).subscribe('annotationCreated', (function(_this) {
        return function(annotation) {
          return _this.newCustomMethod(annotation);
        };
      })(this)).subscribe('annotationUpdated', (function(_this) {
        return function(annotation) {
          return _this.newCustomMethod(annotation);
        };
      })(this)).subscribe('annotationDeleted', (function(_this) {
        return function(annotation) {
          return _this.newCustomMethod(annotation);
        };
      })(this));
    };

    CustomEditor.prototype.customSetup = function(annotation) {
      return console.log(this.options);
    };

    CustomEditor.prototype.newCustomMethod = function(annotation) {
      return console.log(annotation);
    };

    return CustomEditor;

  })(Annotator.Plugin);

}).call(this);
